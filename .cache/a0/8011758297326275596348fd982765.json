{"id":"audioTone.js","dependencies":[{"name":"/Users/alestry-perez/Desktop/vsc-projects/synth-punk/package.json","includedInParent":true,"mtime":1616366666040},{"name":"tone","loc":{"line":1,"column":22},"parent":"/Users/alestry-perez/Desktop/vsc-projects/synth-punk/audioTone.js","resolved":"/Users/alestry-perez/Desktop/vsc-projects/synth-punk/node_modules/tone/build/esm/index.js"}],"generated":{"js":"\"use strict\";\n\nvar Tone = _interopRequireWildcard(require(\"tone\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n//create a synth and connect it to the main output (your speakers)\nvar synth = new Tone.Synth().toDestination(); //play a middle 'C' for the duration of an 8th note\n\nsynth.triggerAttackRelease('C4', '8n');"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"audioTone.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":0},"source":"audioTone.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"audioTone.js","original":{"line":4,"column":0}},{"name":"synth","generated":{"line":10,"column":4},"source":"audioTone.js","original":{"line":4,"column":6}},{"generated":{"line":10,"column":9},"source":"audioTone.js","original":{"line":4,"column":11}},{"generated":{"line":10,"column":12},"source":"audioTone.js","original":{"line":4,"column":14}},{"name":"Tone","generated":{"line":10,"column":16},"source":"audioTone.js","original":{"line":4,"column":18}},{"generated":{"line":10,"column":20},"source":"audioTone.js","original":{"line":4,"column":22}},{"name":"Synth","generated":{"line":10,"column":21},"source":"audioTone.js","original":{"line":4,"column":23}},{"generated":{"line":10,"column":26},"source":"audioTone.js","original":{"line":4,"column":14}},{"name":"toDestination","generated":{"line":10,"column":29},"source":"audioTone.js","original":{"line":4,"column":31}},{"generated":{"line":10,"column":42},"source":"audioTone.js","original":{"line":4,"column":14}},{"generated":{"line":10,"column":44},"source":"audioTone.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":46},"source":"audioTone.js","original":{"line":6,"column":0}},{"name":"synth","generated":{"line":12,"column":0},"source":"audioTone.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":5},"source":"audioTone.js","original":{"line":7,"column":5}},{"name":"triggerAttackRelease","generated":{"line":12,"column":6},"source":"audioTone.js","original":{"line":7,"column":6}},{"generated":{"line":12,"column":26},"source":"audioTone.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":27},"source":"audioTone.js","original":{"line":7,"column":27}},{"generated":{"line":12,"column":31},"source":"audioTone.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":33},"source":"audioTone.js","original":{"line":7,"column":33}},{"generated":{"line":12,"column":37},"source":"audioTone.js","original":{"line":7,"column":0}}],"sources":{"audioTone.js":"import * as Tone from 'tone';\n\n//create a synth and connect it to the main output (your speakers)\nconst synth = new Tone.Synth().toDestination();\n\n//play a middle 'C' for the duration of an 8th note\nsynth.triggerAttackRelease('C4', '8n');\n"},"lineCount":null}},"error":null,"hash":"739964f060fa9f675fc4b61feb8d3042","cacheData":{"env":{}}}